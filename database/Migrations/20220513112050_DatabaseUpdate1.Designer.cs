// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using database.Data;

#nullable disable

namespace database.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220513112050_DatabaseUpdate1")]
    partial class DatabaseUpdate1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("database.Models.Klient", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("imie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("kodpocztowy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("miasto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nazwisko")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ulica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Klient");
                });

            modelBuilder.Entity("database.Models.Platnosc", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("forma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Platnosc");
                });

            modelBuilder.Entity("database.Models.Pojazd", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("cena")
                        .HasColumnType("int");

                    b.Property<string>("marka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pochodzenie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("stanid")
                        .HasColumnType("int");

                    b.Property<string>("vin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("wyposazenieid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Pojazd");
                });

            modelBuilder.Entity("database.Models.Sprzedawca", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("imie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nazwisko")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("numerfirmowy")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Sprzedawca");
                });

            modelBuilder.Entity("database.Models.Stan", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<bool>("uszkkaroseria")
                        .HasColumnType("bit");

                    b.Property<bool>("uszklakier")
                        .HasColumnType("bit");

                    b.Property<bool>("uszksilnik")
                        .HasColumnType("bit");

                    b.Property<bool>("uszkwnetrze")
                        .HasColumnType("bit");

                    b.Property<bool>("uszkzawieszenie")
                        .HasColumnType("bit");

                    b.Property<bool>("zarejestrownay")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("Stan");
                });

            modelBuilder.Entity("database.Models.Transakcja", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime>("data")
                        .HasColumnType("datetime2");

                    b.Property<string>("faktura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("klientidid")
                        .HasColumnType("int");

                    b.Property<int>("kwota")
                        .HasColumnType("int");

                    b.Property<int>("platnoscidid")
                        .HasColumnType("int");

                    b.Property<int>("pojazdidid")
                        .HasColumnType("int");

                    b.Property<int>("sprzedawcaid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("klientidid");

                    b.HasIndex("platnoscidid");

                    b.HasIndex("pojazdidid");

                    b.ToTable("Transakcja");
                });

            modelBuilder.Entity("database.Models.Wyposazenie", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<bool>("abs")
                        .HasColumnType("bit");

                    b.Property<bool>("czujnikipark")
                        .HasColumnType("bit");

                    b.Property<bool>("elekszyby")
                        .HasColumnType("bit");

                    b.Property<bool>("esp")
                        .HasColumnType("bit");

                    b.Property<bool>("grzanefotele")
                        .HasColumnType("bit");

                    b.Property<bool>("inne")
                        .HasColumnType("bit");

                    b.Property<bool>("klimatyzacja")
                        .HasColumnType("bit");

                    b.Property<bool>("skora")
                        .HasColumnType("bit");

                    b.Property<bool>("wspomaganiekier")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("Wyposazenie");
                });

            modelBuilder.Entity("database.Models.Transakcja", b =>
                {
                    b.HasOne("database.Models.Klient", "klientid")
                        .WithMany()
                        .HasForeignKey("klientidid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("database.Models.Platnosc", "platnoscid")
                        .WithMany()
                        .HasForeignKey("platnoscidid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("database.Models.Pojazd", "pojazdid")
                        .WithMany()
                        .HasForeignKey("pojazdidid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("klientid");

                    b.Navigation("platnoscid");

                    b.Navigation("pojazdid");
                });
#pragma warning restore 612, 618
        }
    }
}
